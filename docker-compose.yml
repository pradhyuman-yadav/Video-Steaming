version: '3.8'

services:
  # PHP Application Service
  app:
    build:
      context: . # Build from the current directory
      dockerfile: docker/php/Dockerfile # Path to the PHP Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    volumes:
      - .:/var/www/html # Mount code (good for dev, consider copying code in Dockerfile for prod)
      # If you want persistent storage logs outside the container:
      # - ./storage/logs:/var/www/html/storage/logs
    networks:
      - laravelnet
    # Expose port 9000 internally for Nginx, not needed externally
    # ports:
    #   - "9000:9000"
    depends_on:
      - db # Ensure DB starts before the app attempts to connect

  # Nginx Web Server Service
  webserver:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: laravel_webserver
    restart: unless-stopped
    ports:
      - "80:80" # Map host port 80 to container port 80
      # Add - "443:443" if you configure SSL within the container/Nginx config
    volumes:
      - .:/var/www/html # Mount code so Nginx can access the public dir
      # If using SSL certificates:
      # - ./docker/nginx/certs:/etc/nginx/certs:ro
    networks:
      - laravelnet
    depends_on:
      - app

  # MySQL Database Service
  db:
    image: mysql:8.0 # Use an official MySQL image
    container_name: laravel_db
    restart: unless-stopped
    ports:
      # Expose MySQL port only if you need direct access from your host machine (often not needed)
      # - "3307:3306" # Map host port 3307 to container port 3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password_change_me} # Provide a root password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql # Persist database data
    networks:
      - laravelnet

# Docker Networks
networks:
  laravelnet:
    driver: bridge

# Named Volume for Persistent Data
volumes:
  dbdata:
    driver: local